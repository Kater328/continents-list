{"version":3,"sources":["components/CustomForm.jsx","closedAllContext.js","components/LanguageItem.jsx","ListItemHOC.jsx","components/CountryItem.jsx","components/ContinentItem.jsx","components/List.jsx","data.js","components/CustomList.jsx","nestedMockData.js","App.js","reportWebVitals.js","index.js"],"names":["CustomForm","submit","useState","depth","setDepth","number","setNumber","onSubmit","e","preventDefault","handleSubmit","htmlFor","type","name","value","onChange","target","closedContext","createContext","closed","setClosed","bool","LanguageItem","props","useContext","handleToggle","language","map","item","onClick","code","hoc","WrappedComponent","HOC","changeData","setState","isOpen","state","this","React","Component","displayName","countries","country","languages","client","ApolloClient","cache","InMemoryCache","uri","List","useQuery","gql","data","loading","error","message","Provider","continents","continent","filter","CustomList","list","JSON","stringify","generateData","result","recurs","repeat","i","App","customList","setCustomList","className","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70a817e5.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction CustomForm({submit}) {\r\n    const [depth, setDepth] = useState(1);\r\n    const [number, setNumber] = useState(1);\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if(depth > 0 && number > 0) submit(depth, number);\r\n    }\r\n\r\n    return (\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n        <label htmlFor=\"depth\">\r\n            Depth: \r\n            <input\r\n                type=\"number\"\r\n                name=\"depth\"\r\n                value={depth}\r\n                onChange={(e) => setDepth(e.target.value)}\r\n            />\r\n        </label>\r\n        <label htmlFor=\"number\">\r\n            Number: \r\n            <input\r\n                type=\"number\"\r\n                name=\"number\"\r\n                value={number}\r\n                onChange={(e) => setNumber(e.target.value)}\r\n            />\r\n        </label>\r\n        <button type=\"submit\">Create List</button>\r\n      </form>\r\n    );\r\n}\r\n\r\nexport default CustomForm;","import { createContext } from \"react\";\r\n\r\nconst closedContext = createContext({\r\n  closed: false,\r\n  setClosed: (bool) => {}\r\n});\r\n\r\nexport default closedContext;\r\n","import React, { useContext } from \"react\";\r\nimport closedContext from \"../closedAllContext\";\r\n\r\nfunction LanguageItem(props) {\r\n  const { setClosed } = useContext(closedContext);\r\n  const handleToggle = () => setClosed(true);\r\n  \r\n  return (\r\n    <>\r\n        {props.language.map((item) => (\r\n          <li key={item.code} onClick={handleToggle}>\r\n            {item.name}\r\n          </li>\r\n        ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LanguageItem;\r\n","import React from 'react'\r\n\r\nconst hoc = WrappedComponent => {\r\n  class HOC extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n        \r\n      this.state= {\r\n        isOpen: false\r\n      }\r\n    }\r\n    \r\n    changeData = () => {\r\n      this.setState({ isOpen: !this.state.isOpen });\r\n    };\r\n\r\n    render() {\r\n      let { isOpen } = this.state;\r\n      return (\r\n        <WrappedComponent\r\n          isOpen={isOpen}\r\n          changeData={this.changeData}\r\n          {...this.props}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  HOC.displayName = `ListItem(${WrappedComponent.name})`;\r\n  return HOC;\r\n}\r\n\r\nexport default hoc;","import LanguageItem from \"./LanguageItem\";\r\nimport hoc from \"../ListItemHOC\";\r\n\r\nfunction CountryItem(props) {\r\n  return (\r\n    <>\r\n    <li onClick={props.changeData}>\r\n      {props.name}\r\n    </li>\r\n      {(props.isOpen) && \r\n        <ul>\r\n          <LanguageItem \r\n            language={props.language}/>\r\n        </ul>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default hoc(CountryItem);\r\n","import React, { useContext } from \"react\";\r\nimport closedContext from \"../closedAllContext\";\r\nimport CountryItem from \"./CountryItem\";\r\nimport hoc from \"../ListItemHOC\";\r\n\r\nfunction ContinentItem(props) {\r\n  const { setClosed } = useContext(closedContext);\r\n  const handleToggle = () => setClosed(false);\r\n  return (\r\n    <>\r\n    <li onClick={() => {handleToggle(); props.changeData();}}>\r\n      {props.name}\r\n    </li>\r\n      {(props.isOpen) && (!props.closed) &&\r\n        <ul>\r\n          {props.countries.map((country) =>\r\n            <CountryItem\r\n              name={country.name}\r\n              key={country.code}\r\n              language={country.languages}\r\n            />\r\n          )}\r\n        </ul>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default hoc(ContinentItem);\r\n","import {ApolloClient, InMemoryCache, gql, useQuery} from '@apollo/client';\r\nimport React, { useState } from 'react';\r\nimport DATA from '../data';\r\nimport ContinentItem from './ContinentItem';\r\nimport closedContext from '../closedAllContext';\r\n\r\nconst client = new ApolloClient({\r\n  cache: new InMemoryCache(),\r\n  uri: 'https://countries.trevorblades.com'\r\n});\r\n\r\nfunction List() {\r\n  const [closed, setClosed] = useState(false);\r\n\r\n  const {data, loading, error} = useQuery(gql(DATA), {client});\r\n  if (loading || error) {\r\n    return <p>{error ? error.message : 'Loading...'}</p>;\r\n  }\r\n\r\n  return (\r\n    <closedContext.Provider value={{ closed, setClosed }}>\r\n      <ul>\r\n        {data.continents.map((continent) => (\r\n            <ContinentItem\r\n                name={continent.name}\r\n                key={continent.code}\r\n                closed={closed}\r\n                countries={data.countries.filter((item) => item.continent.code === continent.code)}\r\n            />\r\n          ))}\r\n      </ul>\r\n    </closedContext.Provider>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","const DATA = `\r\n{\r\n  continents {\r\n    code\r\n    name\r\n  }\r\n  countries {\r\n    name\r\n    code\r\n    continent {\r\n      code\r\n    }\r\n    languages {\r\n      code\r\n      name\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default DATA;","function CustomList({list}) {\r\n    return (\r\n        <div>{JSON.stringify(list)}</div>\r\n    );\r\n  }\r\n\r\nexport default CustomList;","export default function generateData(depth, number) {\r\n    let result = '{\\n';\r\n    result = recurs(result, depth, number);\r\n    result += '}\\n'.repeat(depth) + '}';\r\n    return result;\r\n}\r\n\r\nfunction recurs (result, depth, number) {\r\n  if (depth === 0) {\r\n    for (let i = 0; i < number; i++) {\r\n        result += `\"number_${i}\": { \\n`;\r\n        result += `\"code\": \"n${i}\", \\n`;\r\n        result += `\"name\": \"number ${i}\" \\n}`;\r\n        result += (i === number - 1) ? `\\n` : `,\\n`\r\n    }\r\n    return result;\r\n  } else {\r\n    result += `\"depth${depth}\": { \\n`;\r\n    result += `\"code\": \"d${depth}\", \\n`;\r\n    result += `\"name\": \"depth ${depth}\", \\n`;\r\n    return recurs(result, depth - 1, number);\r\n  }\r\n}","import './App.css';\nimport { useState } from 'react';\nimport CustomForm from './components/CustomForm';\nimport List from './components/List';\nimport CustomList from './components/CustomList';\nimport generateData from './nestedMockData';\n\nfunction App() {\n  const [customList, setCustomList] = useState();\n\n  function createCustomList(depth, number){\n    setCustomList(generateData(depth, number));\n  }\n\n  return (\n    <div className=\"app\">\n      <h2>Custom List</h2>\n      <CustomForm submit={createCustomList}/>\n      {customList && <CustomList list = {JSON.parse(customList)}/>}\n      <h2>Countries List</h2>\n      <List />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}